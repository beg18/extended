blockquote,body,code,dd,div,dl,dt,fieldset,form,h1,h2,h3,h4,h5,h6,input,li,p,pre,td,textarea,th,ul{margin:0;padding:0}table{border-collapse:collapse;border-spacing:0}abbr,fieldset,img{border:0}address,caption,cite,code,dfn,em,strong,th,var{font-style:normal;font-weight:400}ul li{list-style:none}caption,th{text-align:left}h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:400}sup{vertical-align:text-top}sub{vertical-align:text-bottom}input,select,textarea{font-family:inherit;font-size:inherit;font-weight:inherit}legend{color:#000}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}img{max-width:100%;height:auto}.cover{background-size:cover}.wrapper-fluid{padding-left:30px;padding-right:30px;margin-right:auto;margin-left:auto}.col-five,.col-lg-five,.col-md-five,.col-sm-five,.col-xs-five,.col-xxs-five{position:relative;min-height:1px;padding-left:1.25%;padding-right:1.25%;width:20%;float:left}*{transition:all .5s;transition:all all .5s ease-out}*,:after,:before{box-sizing:border-box}.wrapper{max-width:1190px;margin:0 auto;padding-left:30px;padding-right:30px}.container-wrap{min-width:300px;min-width:18.75rem;max-width:1950px;max-width:121.875rem;padding:0 15px;padding:0 .9375rem;box-sizing:border-box;margin:0 auto}::-webkit-input-placeholder{color:#666;opacity:1}:-moz-placeholder,::-moz-placeholder{color:#666;opacity:1}:-ms-input-placeholder{color:#666;opacity:1}body,html{height:100%}html{box-sizing:border-box;font-size:16px}body{height:auto!important;min-height:100%;font-family:Arial,Helvetica,sans-serif;color:#000;overflow-x:hidden;min-width:300px;min-width:18.75rem;position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}footer,header{-ms-flex:0 0 auto;flex:0 0 auto}main{-ms-flex:1 0 auto;flex:1 0 auto}h1,h2,h3,h4,h5,h6{margin:0}h1{font-size:2.6875rem}h2{font-size:2.125rem}h3{font-size:1.0625rem}h4{font-size:1rem}h5{font-size:.9375rem}h6{font-size:.8125rem}ol,ul{list-style:none;margin:0;padding:0}a:focus{outline:none}fieldset{border:0;margin:0;padding:0}@media (min-width:380px){.col-xxs-five{width:20%;float:left}}@media (min-width:576px){.col-xs-five{width:20%;float:left}}@media (min-width:768px){.col-sm-five{width:20%;float:left}}@media (min-width:992px){.col-md-five{width:20%;float:left}}@media (min-width:1300px){.col-lg-five{width:20%;float:left}}@media screen and (max-width:1300px){.wrapper,.wrapper-fluid{padding-left:15px;padding-right:15px}}@media screen and (max-width:992px){.wrapper,.wrapper-fluid{padding-left:15px;padding-right:15px}}@media screen and (max-width:768px){html{font-size:15px}}@media screen and (max-width:576px){html{font-size:14px}}@media screen and (max-width:380px){html{font-size:13px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
